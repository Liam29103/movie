{"ast":null,"code":"var _jsxFileName = \"D:\\\\Capstone\\\\nextflix\\\\netflix-clone\\\\client\\\\src\\\\App.jsx\";\nimport \"./App.scss\";\nimport Home from \"./pages/home/Home\";\nimport Watch from \"./pages/watch/Watch\";\nimport Register from \"./pages/register/Register\";\nimport Login from \"./pages/login/Login\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const user = true;\n  return (\n    /*#__PURE__*/\n    // <Router>\n    //     <Switch>\n    //         <Route exact path=\"/\">\n    //             {user ? <Home /> : <Redirect to=\"/register\" />}\n    //         </Route>\n    //         <Route path=\"/register\">{!user ? <Register /> : <Redirect to=\"/\" />}</Route>\n    //         <Route path=\"/login\">{!user ? <Login /> : <Redirect to=\"/\" />}</Route>\n    //         {user && (\n    //             <>\n    //                 <Route path=\"/movies\">\n    //                     <Home type=\"movie\" />\n    //                 </Route>\n    //                 <Route path=\"/series\">\n    //                     <Home type=\"series\" />\n    //                 </Route>\n    //                 <Route path=\"/watch\">\n    //                     <Watch />\n    //                 </Route>\n    //             </>\n    //         )}\n    //     </Switch>\n    // </Router>\n    _jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies\",\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Home","Watch","Register","Login","BrowserRouter","Router","Route","Redirect","Switch","jsxDEV","_jsxDEV","App","user","children","path","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Capstone/nextflix/netflix-clone/client/src/App.jsx"],"sourcesContent":["import \"./App.scss\";\r\nimport Home from \"./pages/home/Home\";\r\nimport Watch from \"./pages/watch/Watch\";\r\nimport Register from \"./pages/register/Register\";\r\nimport Login from \"./pages/login/Login\";\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n    const user = true;\r\n    return (\r\n        // <Router>\r\n        //     <Switch>\r\n        //         <Route exact path=\"/\">\r\n        //             {user ? <Home /> : <Redirect to=\"/register\" />}\r\n        //         </Route>\r\n        //         <Route path=\"/register\">{!user ? <Register /> : <Redirect to=\"/\" />}</Route>\r\n        //         <Route path=\"/login\">{!user ? <Login /> : <Redirect to=\"/\" />}</Route>\r\n        //         {user && (\r\n        //             <>\r\n        //                 <Route path=\"/movies\">\r\n        //                     <Home type=\"movie\" />\r\n        //                 </Route>\r\n        //                 <Route path=\"/series\">\r\n        //                     <Home type=\"series\" />\r\n        //                 </Route>\r\n        //                 <Route path=\"/watch\">\r\n        //                     <Watch />\r\n        //                 </Route>\r\n        //             </>\r\n        //         )}\r\n        //     </Switch>\r\n        // </Router>\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n                <Route path=\"/movies\">\r\n                    <Home />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\nexport default App;\r\n"],"mappings":";AAAA,OAAO,YAAY;AACnB,OAAOA,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAAQC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,MAAM,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElF,MAAMC,GAAG,GAAGA,CAAA,KAAM;EACd,MAAMC,IAAI,GAAG,IAAI;EACjB;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAF,OAAA,CAACL,MAAM;MAAAQ,QAAA,eACHH,OAAA,CAACF,MAAM;QAAAK,QAAA,gBACHH,OAAA,CAACJ,KAAK;UAACQ,IAAI,EAAC,GAAG;UAAAD,QAAA,eACXH,OAAA,CAACV,IAAI;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACRR,OAAA,CAACJ,KAAK;UAACQ,IAAI,EAAC,SAAS;UAAAD,QAAA,eACjBH,OAAA,CAACV,IAAI;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;AAEjB,CAAC;AAACC,EAAA,GApCIR,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}