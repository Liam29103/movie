{"ast":null,"code":"var _jsxFileName = \"D:\\\\Capstone\\\\nextflix\\\\netflix-clone\\\\client\\\\src\\\\App.jsx\";\nimport \"./App.scss\";\nimport Watch from \"./pages/watch/Watch\";\nimport Home from \"./pages/home/Home\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport Register from \"./pages/register/Register\";\nimport Login from \"./pages/login/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const user = false;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: user ? /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/register\",\n        children: !user ? /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        children: !user ? /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), user && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            type: \"movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/series\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            type: \"series\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/watch\",\n          children: /*#__PURE__*/_jsxDEV(Watch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Watch","Home","BrowserRouter","Router","Switch","Route","Redirect","Register","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","App","user","children","exact","path","fileName","_jsxFileName","lineNumber","columnNumber","to","type","_c","$RefreshReg$"],"sources":["D:/Capstone/nextflix/netflix-clone/client/src/App.jsx"],"sourcesContent":["import \"./App.scss\";\r\nimport Watch from \"./pages/watch/Watch\";\r\nimport Home from \"./pages/home/Home\";\r\nimport {BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Register from \"./pages/register/Register\";\r\nimport Login from \"./pages/login/Login\";\r\n\r\nconst App = () => {\r\n    const user = false;\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    {user ? <Home /> : <Redirect to=\"/register\" />}\r\n                </Route>\r\n                <Route exact path=\"/register\">\r\n                    {!user ? <Register /> : <Redirect to=\"/\" />}\r\n                </Route>\r\n                <Route exact path=\"/login\">\r\n                    {!user ? <Login /> : <Redirect to=\"/\" />}\r\n                </Route>\r\n                {user && (\r\n                    <>\r\n                        <Route path=\"/movies\">\r\n                            <Home type=\"movie\" />\r\n                        </Route>\r\n                        <Route path=\"/series\">\r\n                            <Home type=\"series\" />\r\n                        </Route>\r\n                        <Route path=\"/watch\">\r\n                            <Watch />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}